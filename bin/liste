#!/usr/bin/env ruby
# Liste - reminders, notes, ideas on the go
# Daniel Ethridge

require 'fileutils'
require 'json'
require 'liste'

lib = Lib.new

lib.args = ARGV.map(&:downcase)

# Just running `liste` (no arguments) will display content of the "todo" list
if ARGV.empty?
  puts "Things to do...\n\n"
  disp("todo", "number") rescue
    puts "...nothing here yet"; exit
  exit
end

case args[0]
  when "?", "h", "help", "-h", "--help"
    puts "\nUsage : `liste` or `liste [arguments]`\n\n\
    Liste is for those who have short-term memory and\n\
    those who need constant reminders.\n\
    You should add the line 'liste login' to your .bashrc\n\n\
    do task            :  add 'task' to the todo list\n\
    add list task      :  add 'task' to 'list'\n\
    disp list          :  display content of 'list'\n\
    login              :  show your login list\n\
    mark list done 1   :  remove line 1 from list\n\
    edit list          :  open list in editor\n\
    rmi                :  interactively remove lists\n\
    rm list1 list2 etc :  remove lists list1, list2, etc\n\n\
    If you find a bug, want extra features, or have a suggestion, make a branch\n\
    on github : https://github.com/wlib/liste\n\n"
  # This displays the "login" list
  when "login"
    puts "Your tasks...\n\n"
    disp("login", "bullet") rescue
      puts "\n...nothing here yet"; exit
    exit
end

# Defines how the arguments are interpretted
case args[1]
  # Displays the content in any list
  when "disp"
    puts "Your list '#{ARGV[0]}'...\n\n"
    disp("#{ARGV[1]}", "bullet") rescue
      puts "\n...nothing here yet"; exit
    exit
  # Calls the edit shortcut
  when "edit"
    edit_list()
    exit
  else
    puts "Your first argument was not valid"
end
